---
import Layout from './Layout.astro';

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  featuredImage?: {
    url: string;
    alt: string;
  };
}

const { title, description, pubDate: rawPubDate, featuredImage } = Astro.props;

// Ensure we have a valid date object
let pubDate;

try {
  // Handle string dates (from MDX frontmatter)
  if (typeof rawPubDate === 'string') {
    // Remove any quotes and trim whitespace
    const cleanDate = rawPubDate.replace(/["']/g, '').trim();
    pubDate = new Date(cleanDate);
  } 
  // Handle Date objects
  else if (rawPubDate instanceof Date) {
    pubDate = rawPubDate;
  }
  else {
    throw new Error('pubDate must be a string or Date object');
  }

  // Validate the resulting date
  if (!pubDate || isNaN(pubDate.getTime())) {
    throw new Error('Invalid date value');
  }
} catch (error) {
  throw new Error(`Invalid date format for pubDate: ${rawPubDate}. Please use YYYY-MM-DD format (e.g. "2024-11-10")`);
}
---

<Layout title={title} description={description}>
  <article class="mx-auto max-w-[750px] px-4">
    {featuredImage && (
      <img
        src={featuredImage.url}
        alt={featuredImage.alt}
        class="w-full h-[400px] object-cover rounded-lg mb-8"
      />
    )}
    <h1 class="text-4xl font-bold mb-4">{title}</h1>
    <div class="text-gray-600 dark:text-gray-400 mb-8">
      <time datetime={pubDate.toISOString()}>
        {pubDate.toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
        })}
      </time>
    </div>
    <div class="prose dark:prose-invert max-w-none">
      <slot />
    </div>
    <slot name="pagination" />
  </article>
  <slot name="cta" />
</Layout>
